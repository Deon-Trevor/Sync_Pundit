// /assets/js/render.js
// Instant-first-pass binding, then hydrate with /assets/site.json

// --- tiny utils ---
const get = (obj, path) =>
    path.split('.').reduce((o, k) => (o && o[k] != null) ? o[k] : undefined, obj);

const isObj = v => v && typeof v === 'object' && !Array.isArray(v);
const deepMerge = (base, src) => {
    if (!isObj(base) || !isObj(src)) return src ?? base;
    const out = Array.isArray(base) ? [...base] : { ...base };
    for (const k of Object.keys(src)) {
        out[k] = isObj(src[k]) && isObj(base[k]) ? deepMerge(base[k], src[k]) : src[k];
    }
    return out;
};

// --- sensible defaults so the terminal never looks empty ---
const DEFAULTS = {
    site: {
        title: "Sync_Pundit",
        tagline: "Hacker â€¢ Builder â€¢ Curious n00b",
        projects: { links: { url: "https://github.com/Deon-Trevor?tab=repositories" } }
    },
    profile: {
        name: "Sync_Pundit",
        badges: ["ðŸ‘½", "ðŸ˜Ž", "ðŸ”±", "ðŸ”¥"]
    },
    expertise: {
        areas: ["OSINT & Recon",
            "Security Engineering",
            "Social Engineering",
            "Threat Detection",
            "Automation & CLI tooling"]
    },
    "social": [
        {
            "id": "email",
            "label": "Email",
            "url": "mailto:hello@syncpundit.io",
            "username": "hello@syncpundit.io",
            "icon": "<svg class=\"social-icon-fill\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3 3.25C1.48122 3.25 0.25 4.48121 0.25 6V24.4C0.25 25.9188 1.48122 27.15 3 27.15H27C28.5188 27.15 29.75 25.9188 29.75 24.4V6C29.75 4.48122 28.5188 3.25 27 3.25H3ZM1.75 6C1.75 5.30964 2.30964 4.75 3 4.75H27C27.6904 4.75 28.25 5.30964 28.25 6V24.4C28.25 25.0904 27.6904 25.65 27 25.65H3C2.30964 25.65 1.75 25.0904 1.75 24.4V6ZM24.4101 10.2003L15.4501 16.9203C15.1834 17.1203 14.8167 17.1203 14.5501 16.9203L5.59008 10.2003C5.25871 9.95178 5.19156 9.48168 5.44008 9.15031C5.68861 8.81894 6.15871 8.75178 6.49008 9.00031L15.0001 15.3828L23.5101 9.00031C23.8415 8.75178 24.3116 8.81894 24.5601 9.15031C24.8086 9.48168 24.7415 9.95178 24.4101 10.2003Z\" fill=\"white\"/></svg>"
        },
        {
            "id": "linkedin",
            "label": "LinkedIn",
            "url": "https://www.linkedin.com/in/deon-trevor-mpofu/",
            "username": "deon-trevor-mpofu",
            "icon": "<svg class=\"social-icon-fill\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.25 3C0.25 1.48122 1.48122 0.25 3 0.25H27C28.5188 0.25 29.75 1.48122 29.75 3V27C29.75 28.5188 28.5188 29.75 27 29.75H3C1.48122 29.75 0.25 28.5188 0.25 27V3ZM3 1.75C2.30964 1.75 1.75 2.30964 1.75 3V27C1.75 27.6904 2.30964 28.25 3 28.25H27C27.6904 28.25 28.25 27.6904 28.25 27V3C28.25 2.30964 27.6904 1.75 27 1.75H3ZM10 9.75H8V8.25H10V9.75ZM8.25 22V12H9.75V22H8.25ZM12.25 12H13.75V13.5359C14.5997 12.7384 15.7428 12.25 17 12.25C19.6234 12.25 21.75 14.3766 21.75 17V22H20.25V17C20.25 15.2051 18.7949 13.75 17 13.75C15.2051 13.75 13.75 15.2051 13.75 17V22H12.25V12Z\" fill=\"white\"/></svg>"
        },
        {
            "id": "github",
            "label": "GitHub",
            "url": "https://github.com/Deon-Trevor",
            "username": "Deon-Trevor",
            "icon": "<svg class=\"social-icon-fill\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M19.7998 28.2998C19.3998 28.2998 18.9998 27.9998 18.9998 27.4998V20.1998C18.9998 18.9998 18.9998 18.4998 18.4998 17.9998C18.2998 17.7998 18.1998 17.4998 18.2998 17.1998C18.3998 16.8998 18.5998 16.6998 18.8998 16.6998C22.4998 16.2998 24.6998 15.0998 24.6998 9.99982C24.6998 8.69982 24.1998 7.39982 23.2998 6.49982C23.0998 6.29982 22.9998 5.99982 23.0998 5.69982C23.2998 5.09982 23.3998 4.59982 23.3998 3.99982C23.3998 3.59982 23.2998 3.09982 23.1998 2.69982C22.6998 2.79982 21.5998 2.99982 19.7998 4.19982C19.5998 4.29982 19.3998 4.29982 19.1998 4.29982C16.7998 3.69982 14.1998 3.69982 11.7998 4.29982C11.5998 4.39982 11.3998 4.29982 11.1998 4.19982C9.3998 3.09982 8.2998 2.79982 7.7998 2.79982C7.6998 3.19982 7.5998 3.59982 7.5998 4.09982C7.5998 4.69982 7.6998 5.29982 7.8998 5.79982C7.9998 6.09982 7.8998 6.39982 7.6998 6.59982C7.1998 7.09982 6.8998 7.59982 6.5998 8.19982C6.3998 8.79982 6.1998 9.39982 6.1998 10.0998C6.1998 15.0998 8.3998 16.3998 11.9998 16.7998C12.2998 16.7998 12.4998 16.9998 12.5998 17.2998C12.6998 17.5998 12.5998 17.8998 12.3998 18.0998C11.9998 18.4998 11.7998 19.2998 11.8998 20.4998V22.4998V22.5998V27.5998C11.8998 27.9998 11.5998 28.3998 11.0998 28.3998C10.5998 28.3998 10.2998 28.0998 10.2998 27.5998V23.5998C6.9998 24.1998 5.6998 22.1998 4.8998 20.7998C4.4998 20.0998 4.0998 19.4998 3.6998 19.3998C3.2998 19.2998 3.0998 18.8998 3.1998 18.4998C3.2998 18.0998 3.6998 17.8998 4.0998 17.9998C5.0998 18.2998 5.6998 19.1998 6.1998 20.0998C7.0998 21.4998 7.7998 22.7998 10.3998 22.1998V20.7998C10.2998 19.7998 10.3998 18.9998 10.5998 18.3998C7.4998 17.7998 4.5998 16.1998 4.5998 10.3998C4.5998 9.49982 4.7998 8.69982 5.0998 7.89982C5.4998 6.99982 5.8998 6.39982 6.2998 5.89982C6.1998 5.29982 6.0998 4.69982 6.0998 3.99982C6.0998 3.19982 6.2998 2.39982 6.5998 1.69982C6.6998 1.49982 6.8998 1.29982 7.0998 1.29982C7.3998 1.19982 8.7998 0.999818 11.7998 2.79982C14.2998 2.19982 16.8998 2.19982 19.2998 2.79982C22.2998 0.999818 23.6998 1.19982 23.9998 1.29982C24.1998 1.39982 24.3998 1.49982 24.4998 1.69982C24.7998 2.39982 24.9998 3.19982 24.9998 3.99982C24.9998 4.59982 24.8998 5.29982 24.7998 5.89982C25.7998 7.09982 26.3998 8.49982 26.3998 10.0998C26.3998 15.8998 23.5998 17.5998 20.4998 18.0998C20.6998 18.7998 20.6998 19.4998 20.6998 20.1998V27.4998C20.5998 27.9998 20.1998 28.2998 19.7998 28.2998Z\" fill=\"white\"/></svg>"
        },
        {
            "id": "x",
            "label": "X",
            "url": "https://twitter.com/Sync_Pundit",
            "username": "Sync_Pundit",
            "icon": "<svg class=\"social-icon-fill\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\"><path d=\"M0 0L11.551 16.875L0.244653 30H2.74965L12.6573 18.491L20.5355 30H30L17.932 12.371L28.5813 0H26.084L16.8241 10.7504L9.46453 0H0ZM2.99123 1.57895H8.63517L27.0088 28.4211H21.3648L2.99123 1.57895Z\" fill=\"white\"/></svg>"
        },
        {
            "id": "reddit",
            "label": "Reddit",
            "url": "https://www.reddit.com/user/sync_pundit",
            "username": "u/sync_pundit",
            "icon": "<svg class=\"social-icon-fill\" width=\"30\" height=\"25\" viewBox=\"0 0 30 25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.8043 0.424947C14.9745 0.282448 15.199 0.222664 15.4176 0.261685L23.2467 1.65971C23.5575 0.835926 24.3532 0.250006 25.2857 0.250006C26.4889 0.250006 27.4643 1.22539 27.4643 2.42858C27.4643 3.63177 26.4889 4.60715 25.2857 4.60715C24.3455 4.60715 23.5445 4.0116 23.2392 3.17717C23.2109 3.17537 23.1824 3.17196 23.1539 3.16686L16.0357 1.89579L16.0357 7.41149C19.0914 7.56357 21.8244 8.6346 23.8497 10.1765C23.8595 10.1839 23.8692 10.1913 23.8789 10.1988C24.5389 9.36061 25.5631 8.82143 26.7143 8.82143C28.7065 8.82143 30.3215 10.4364 30.3215 12.4286C30.3215 14.1704 29.0869 15.6238 27.4451 15.9616C27.4578 16.1169 27.4643 16.2726 27.4643 16.4286C27.4643 18.781 25.9964 20.8434 23.8073 22.2821C21.6099 23.7263 18.605 24.6071 15.2857 24.6071C11.9663 24.6071 8.96141 23.7263 6.76405 22.2821C4.57497 20.8434 3.10714 18.781 3.10714 16.4286C3.10714 16.2726 3.11361 16.1169 3.12633 15.9616C1.48453 15.6238 0.25 14.1704 0.25 12.4286C0.25 10.4364 1.86497 8.82143 3.85714 8.82143C5.0083 8.82143 6.03251 9.3606 6.69252 10.1987C6.70222 10.1913 6.71193 10.1839 6.72166 10.1765C8.74697 8.6346 11.48 7.56357 14.5357 7.41149L14.5357 0.999999C14.5357 0.778021 14.6341 0.567447 14.8043 0.424947ZM5.56101 11.1884C5.17733 10.6622 4.55648 10.3214 3.85714 10.3214C2.6934 10.3214 1.75 11.2648 1.75 12.4286C1.75 13.4469 2.47233 14.2965 3.43256 14.4929C3.83053 13.3042 4.57479 12.1754 5.56101 11.1884ZM27.1389 14.4929C28.0991 14.2965 28.8215 13.4469 28.8215 12.4286C28.8215 11.2648 27.8781 10.3214 26.7143 10.3214C26.015 10.3214 25.3941 10.6622 25.0104 11.1884C25.9966 12.1754 26.7409 13.3042 27.1389 14.4929ZM25.2857 1.75001C24.9109 1.75001 24.6071 2.05381 24.6071 2.42858C24.6071 2.80334 24.9109 3.10715 25.2857 3.10715C25.6605 3.10715 25.9643 2.80334 25.9643 2.42858C25.9643 2.05381 25.6605 1.75001 25.2857 1.75001ZM7.63027 11.37C5.68645 12.8498 4.60714 14.7233 4.60714 16.4286C4.60714 18.1095 5.65966 19.7614 7.58788 21.0286C9.50781 22.2904 12.2172 23.1071 15.2857 23.1071C18.3541 23.1071 21.0635 22.2904 22.9835 21.0286C24.9117 19.7614 25.9643 18.1095 25.9643 16.4286C25.9643 14.7233 24.885 12.8498 22.9411 11.37C21.0134 9.90244 18.316 8.89286 15.2857 8.89286C12.2553 8.89286 9.55792 9.90244 7.63027 11.37ZM11.7143 14.6071H10.2857V13.1071H11.7143V14.6071ZM20.2857 14.6071H18.8571V13.1071H20.2857V14.6071ZM9.88575 17.5891L10.5769 17.8803C11.982 18.4723 13.2748 18.8214 15.2857 18.8214C17.2966 18.8214 18.5894 18.4723 19.9945 17.8803L20.6857 17.5891L21.2681 18.9714L20.5769 19.2626C19.0115 19.9221 17.5212 20.3214 15.2857 20.3214C13.0502 20.3214 11.5599 19.9221 9.99452 19.2626L9.30336 18.9714L9.88575 17.5891Z\" fill=\"white\"/></svg>"
        },
        {
            "id": "buymeacoffee",
            "label": "Buy Me a Coffee",
            "url": "https://buymeacoffee.com/Sync_Pundit",
            "username": "Sync_Pundit",
            "icon": "<svg class=\"social-icon-fill\" width=\"20\" height=\"28\" viewBox=\"0 0 20 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M19.2556 7.48379L19.1015 6.70669C18.9633 6.00944 18.6495 5.35062 17.9338 5.09862C17.7044 5.01801 17.4441 4.98335 17.2682 4.81648C17.0923 4.64961 17.0403 4.39045 16.9996 4.15013C16.9243 3.70903 16.8535 3.26755 16.7762 2.82721C16.7096 2.44864 16.6568 2.02336 16.4832 1.67606C16.2572 1.20972 15.7882 0.937002 15.3218 0.75657C15.0829 0.667367 14.839 0.591907 14.5915 0.530558C13.4264 0.223183 12.2014 0.110178 11.0028 0.0457648C9.56411 -0.0336212 8.12159 -0.00970332 6.68634 0.117335C5.61806 0.21452 4.4929 0.332046 3.47774 0.701574C3.1067 0.836804 2.72437 0.999154 2.44223 1.28581C2.09606 1.63801 1.98305 2.1827 2.23581 2.62191C2.41549 2.93381 2.71985 3.15417 3.04267 3.29995C3.46315 3.48778 3.90229 3.63071 4.35278 3.72636C5.60714 4.0036 6.90633 4.11246 8.18781 4.15879C9.60815 4.21611 11.0308 4.16966 12.4444 4.01979C12.7939 3.98137 13.1429 3.93529 13.4912 3.88155C13.9014 3.81864 14.1647 3.28224 14.0438 2.90857C13.8991 2.46182 13.5104 2.28855 13.0708 2.35597C13.006 2.36615 12.9416 2.37556 12.8768 2.38498L12.8301 2.39176C12.6812 2.41059 12.5322 2.42817 12.3833 2.4445C12.0757 2.47764 11.7673 2.50477 11.4582 2.52586C10.7658 2.57408 10.0716 2.5963 9.37776 2.59743C8.69596 2.59743 8.01378 2.57822 7.33349 2.53339C7.0231 2.51305 6.71346 2.48719 6.40458 2.4558C6.26408 2.44111 6.12395 2.42566 5.98382 2.40833L5.85048 2.39138L5.82147 2.38724L5.68323 2.36728C5.40072 2.32471 5.1182 2.27574 4.8387 2.2166C4.8105 2.21034 4.78527 2.19465 4.76719 2.17212C4.74911 2.14959 4.73925 2.12156 4.73925 2.09267C4.73925 2.06378 4.74911 2.03576 4.76719 2.01322C4.78527 1.99069 4.8105 1.975 4.8387 1.96874H4.84397C5.08618 1.91714 5.33027 1.87306 5.57512 1.83464C5.65673 1.82184 5.7386 1.80928 5.82072 1.79697H5.82298C5.97629 1.7868 6.13035 1.75931 6.28291 1.74122C7.61022 1.60316 8.94543 1.55609 10.2792 1.60034C10.9267 1.61918 11.5738 1.65722 12.2183 1.72277C12.357 1.73708 12.4948 1.75215 12.6327 1.7691C12.6854 1.7755 12.7385 1.78304 12.7917 1.78944L12.8986 1.80488C13.2105 1.85134 13.5208 1.90772 13.8294 1.97402C14.2867 2.07346 14.874 2.10586 15.0774 2.60685C15.1422 2.76581 15.1716 2.94247 15.2073 3.10935L15.2529 3.32217C15.2541 3.32599 15.255 3.32989 15.2556 3.33385C15.3633 3.8361 15.4711 4.33834 15.5791 4.84059C15.587 4.87769 15.5872 4.91603 15.5797 4.95321C15.5721 4.99038 15.557 5.0256 15.5352 5.05667C15.5134 5.08774 15.4855 5.11399 15.4531 5.13378C15.4208 5.15357 15.3847 5.16648 15.3471 5.1717H15.3441L15.2782 5.18074L15.213 5.1894C15.0066 5.21627 14.7999 5.24138 14.593 5.26474C14.1854 5.3112 13.7772 5.35138 13.3684 5.38528C12.556 5.45283 11.742 5.49715 10.9263 5.51825C10.5107 5.5293 10.0952 5.53445 9.67986 5.53369C8.02659 5.53239 6.37475 5.4363 4.73247 5.2459C4.55468 5.22481 4.37688 5.20221 4.19909 5.17923C4.33696 5.19694 4.09889 5.16567 4.05067 5.15889C3.93767 5.14307 3.82466 5.12662 3.71166 5.10954C3.33234 5.05266 2.95527 4.9826 2.57671 4.9212C2.11903 4.84586 1.68132 4.88353 1.26735 5.10954C0.927536 5.2955 0.652505 5.58065 0.478946 5.92695C0.300397 6.2961 0.247285 6.69803 0.167428 7.09468C0.0875705 7.49132 -0.0367361 7.91811 0.0103495 8.32531C0.111678 9.20411 0.726052 9.91831 1.60976 10.078C2.4411 10.2287 3.27696 10.3507 4.11509 10.4547C7.40743 10.8579 10.7336 10.9062 14.0362 10.5986C14.3052 10.5735 14.5738 10.5461 14.842 10.5165C14.9257 10.5073 15.0105 10.5169 15.09 10.5447C15.1696 10.5725 15.2419 10.6178 15.3017 10.6771C15.3615 10.7365 15.4073 10.8085 15.4357 10.8879C15.4641 10.9672 15.4743 11.0519 15.4657 11.1358L15.3821 11.9486C15.2136 13.5912 15.0451 15.2337 14.8766 16.8761C14.7008 18.6008 14.5239 20.3254 14.3459 22.0498C14.2956 22.5355 14.2454 23.0211 14.1952 23.5065C14.147 23.9845 14.1402 24.4776 14.0494 24.9499C13.9063 25.6928 13.4034 26.1489 12.6696 26.3158C11.9974 26.4688 11.3106 26.5491 10.6212 26.5554C9.8569 26.5595 9.09298 26.5256 8.32869 26.5297C7.51279 26.5343 6.51344 26.4589 5.88362 25.8517C5.33027 25.3183 5.25381 24.4832 5.17847 23.7611C5.07802 22.8051 4.97845 21.8492 4.87976 20.8934L4.32603 15.5788L3.9678 12.14C3.96178 12.0831 3.95575 12.027 3.9501 11.9697C3.90716 11.5595 3.61673 11.158 3.15906 11.1787C2.76731 11.196 2.32207 11.529 2.36802 11.9697L2.63359 14.5191L3.18279 19.7927C3.33924 21.2907 3.49532 22.7889 3.65101 24.2873C3.68115 24.5744 3.7094 24.8622 3.74104 25.1492C3.91318 26.7177 5.11104 27.563 6.59443 27.8011C7.4608 27.9404 8.34828 27.9691 9.22746 27.9834C10.3545 28.0015 11.4928 28.0448 12.6014 27.8406C14.2442 27.5393 15.4767 26.4424 15.6526 24.7409C15.7028 24.2497 15.753 23.7584 15.8033 23.2669C15.9703 21.6416 16.137 20.0162 16.3035 18.3907L16.8482 13.0794L17.0979 10.6453C17.1104 10.5246 17.1613 10.4111 17.2433 10.3216C17.3252 10.2322 17.4338 10.1714 17.553 10.1485C18.0227 10.0569 18.4717 9.9006 18.8058 9.54313C19.3377 8.97396 19.4435 8.23189 19.2556 7.48379Z\" fill=\"white\"/></svg>"
        },
        {
            "id": "discord",
            "label": "Discord",
            "url": "https://discord.gg/6w4c32utju",
            "username": "Sync_Pundit",
            "icon": "<svg class=\"social-icon-fill\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.07952 5.9865C5.06013 6.04065 5.03724 6.10501 5.01116 6.17912C4.91843 6.4426 4.78537 6.82913 4.62542 7.31768C4.3054 8.29511 3.87833 9.67905 3.45132 11.3016C2.59982 14.537 1.7608 18.6759 1.7501 22.4212C1.75456 22.4417 1.76058 22.468 1.7684 22.4995C1.7924 22.5962 1.83313 22.741 1.89746 22.9182C2.02665 23.2741 2.24744 23.7511 2.61102 24.231C3.29002 25.1272 4.5067 26.0907 6.72954 26.2364C6.76667 26.203 6.80771 26.1661 6.85215 26.1259C7.06714 25.9318 7.36089 25.6639 7.67639 25.3682C8.25924 24.8221 8.87489 24.2195 9.22418 23.8101C8.85596 23.6866 8.50883 23.5591 8.18286 23.4319C7.61082 23.208 6.9774 22.93 6.33892 22.5725C6.32346 22.5639 6.30831 22.5547 6.29351 22.545C6.29056 22.5434 6.28163 22.5387 6.26198 22.5289L6.25607 22.5259C6.22753 22.5117 6.1721 22.4841 6.11031 22.4458C6.04615 22.41 5.99444 22.3728 5.95407 22.3397C5.76066 22.2305 5.60651 22.1367 5.49586 22.0668C5.43349 22.0274 5.38487 21.9956 5.35074 21.9728C5.33367 21.9615 5.32022 21.9524 5.31048 21.9457L5.29866 21.9376L5.29486 21.9349L5.29349 21.934L5.29258 21.9333C5.29253 21.9333 5.29248 21.9333 5.72255 21.3188L5.29258 21.9333C4.95324 21.6958 4.87058 21.2281 5.1081 20.8888C5.3454 20.5497 5.81238 20.467 6.15165 20.7037C6.15171 20.7038 6.15256 20.7043 6.15262 20.7044L6.1569 20.7073L6.18276 20.7248C6.20707 20.741 6.24535 20.7661 6.29686 20.7986C6.39992 20.8637 6.55564 20.9583 6.75805 21.0708C6.80522 21.097 6.84938 21.1282 6.88979 21.1638C6.89356 21.1662 6.89732 21.1686 6.90105 21.1711C6.90394 21.1726 6.91293 21.1773 6.9331 21.1874L6.93891 21.1903C6.96854 21.2051 7.02696 21.2342 7.09148 21.2748C7.64544 21.5833 8.20424 21.8295 8.72884 22.0348C9.67953 22.4057 10.8088 22.774 12.1193 23.0272C13.844 23.3489 15.8576 23.4618 18.0501 23.0508L18.0624 23.0485C19.1287 22.8669 20.2243 22.5485 21.3738 22.0655C21.3935 22.0576 21.3984 22.0557 21.4034 22.0539C22.1892 21.7622 23.0732 21.3324 24.0087 20.7164C24.3546 20.4886 24.8197 20.5843 25.0475 20.9303C25.2754 21.2762 25.1796 21.7413 24.8337 21.9691C23.809 22.6439 22.8285 23.1236 21.9402 23.4546C21.5571 23.6152 21.178 23.7595 20.8021 23.8884C21.1533 24.2917 21.75 24.8654 22.318 25.3871C22.6332 25.6764 22.9266 25.9382 23.1414 26.1277C23.1864 26.1674 23.2279 26.2038 23.2653 26.2367C25.4913 26.0922 26.7094 25.1279 27.3889 24.231C27.7525 23.7511 27.9733 23.2741 28.1025 22.9182C28.1669 22.7409 28.2076 22.5961 28.2316 22.4995C28.2394 22.468 28.2454 22.4417 28.2499 22.4212C28.2392 18.6759 27.4001 14.537 26.5486 11.3017C26.1216 9.67917 25.6945 8.29525 25.3744 7.31783C25.2145 6.82929 25.0814 6.44277 24.9887 6.17929C24.9626 6.10518 24.9397 6.04081 24.9203 5.98666C23.3524 4.85176 21.8377 4.29236 20.7074 4.01656C20.208 3.89469 19.7844 3.82843 19.466 3.79248L19.2444 5.51755C20.5605 5.94018 21.917 6.55133 23.3605 7.34248C23.7237 7.54156 23.8568 7.99741 23.6577 8.36064C23.4586 8.72387 23.0028 8.85695 22.6395 8.65786C19.7397 7.0685 17.3505 6.31738 15.0046 6.31854C12.6582 6.3197 10.2657 7.07345 7.3591 8.65861C6.99545 8.85694 6.53988 8.72292 6.34156 8.35927C6.14323 7.99562 6.27725 7.54005 6.6409 7.34172C8.05569 6.57014 9.3867 5.96919 10.6775 5.54765L10.5106 3.795C10.1949 3.83155 9.77981 3.89753 9.29245 4.01645C8.16213 4.29227 6.64744 4.85168 5.07952 5.9865Z\" fill=\"white\"/></svg>"
        }
    ]
};

// --- binder (used for both default + hydrated data passes) ---
function bindAll(data) {
    // 1) Bind text: [data-bind="site.title"]
    document.querySelectorAll('[data-bind]').forEach(el => {
        const val = get({ site: data.site, ...data }, el.getAttribute('data-bind'));
        if (val != null) el.textContent = String(val);
    });

    // 2) Bind href: [data-href="site.projects.links.url"]
    document.querySelectorAll('[data-href]').forEach(el => {
        const val = get({ site: data.site, ...data }, el.getAttribute('data-href'));
        if (val) el.setAttribute('href', val);
    });

    // 3) Join arrays: [data-join="profile.badges" data-join-sep=" "]
    document.querySelectorAll('[data-join]').forEach(el => {
        const arr = get({ site: data.site, ...data }, el.getAttribute('data-join'));
        const sep = el.getAttribute('data-join-sep') ?? ', ';
        if (Array.isArray(arr)) el.textContent = arr.join(sep);
    });

    // 4) Social list
    const socials = Array.isArray(data.social) ? data.social : [];
    const list = document.getElementById('social-list');
    if (list) {
        list.innerHTML = socials.map(s => `
      <li class="page-social">
        <a class="social-icon-anchor"
           href="${s.url}"
           rel="me noopener nofollow"
           target="_blank"
           aria-label="${s.label}">
          ${s.icon ? `<span aria-hidden="true">${s.icon}</span>` : ''}
          ${s.icon ? `<span class="sr-only">${s.label}</span>` : s.label}
        </a>
      </li>
    `).join('');
    }

    // 5) Direct social hook: <a data-social="github">
    const socialById = Object.fromEntries(socials.map(s => [s.id, s]));
    document.querySelectorAll('[data-social]').forEach(el => {
        const id = el.getAttribute('data-social');
        const s = socialById[id];
        if (!s) return;
        el.setAttribute('href', s.url);
        el.setAttribute('target', '_blank');
        el.setAttribute('rel', 'noopener nofollow');
        if (el.hasAttribute('data-social-icon') && s.icon) {
            el.innerHTML = `${s.icon}<span class="sr-only">${s.label}</span>`;
        }
    });

    // 6) Year
    const y = document.getElementById('year');
    if (y) y.textContent = new Date().getFullYear();
}

// Exposed hook that include.js will call
window.__renderSite = async function () {
    // PASS 1: instant render with defaults (no await)
    bindAll(DEFAULTS);

    // PASS 2: fetch real data and hydrate
    try {
        // Adjust path if you keep site.json elsewhere
        const res = await fetch('/data/site.json', { cache: 'no-store' });
        if (!res.ok) return; // keep defaults
        const siteJson = await res.json();

        // Normalize shape {site, profile, expertise, socialâ€¦}
        // If your file already uses that, great. If itâ€™s a single object, we still deep-merge sanely.
        const normalized = isObj(siteJson.site)
            ? siteJson
            : { ...siteJson, site: siteJson.site || siteJson };

        const hydrated = deepMerge(DEFAULTS, normalized);
        bindAll(hydrated);
    } catch {
        // network error? keep defaults; nothing to do
    }
};

document.addEventListener("DOMContentLoaded", () => {
    const toggleBtn = document.getElementById("toggleMode");
    const whatIDoText = document.getElementById("whatIDoText");

    const techVersion = `I design and deliver intelligence-driven security solutions that uncover, analyse, and mitigate high-risk cyber threats. Leveraging OSINT, automation, and advanced detection workflows, I track malicious infrastructure, expose fraud networks, and produce actionable intelligence for decision-makers. I bridge the gap between technical engineering and frontline security operationsâ€”building scalable platforms, training analysts, and guiding stakeholders through complex threat landscapes to enhance national and global security outcomes.`;

    const momVersion = `I help protect people, companies, and communities from online threats. I track down criminals on the internet, uncover scams, and find the hidden networks they use. I turn complex technical information into clear advice so the right people can take action. I also build easy-to-use tools, teach security teams, and guide organisations through dangerous situationsâ€”so they can stay safe, protect their reputation, and keep operating without disruption.`;

    let isTech = true;

    toggleBtn.addEventListener("click", () => {
        if (isTech) {
            whatIDoText.textContent = momVersion;
            toggleBtn.textContent = "I like it darker";
        } else {
            whatIDoText.textContent = techVersion;
            toggleBtn.textContent = "Mom-friendly";
        }
        isTech = !isTech;
    });
});

